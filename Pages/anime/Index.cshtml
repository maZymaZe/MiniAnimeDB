@page
@model MiniAnimeDB.Pages.anime.IndexModel

@{
    ViewData["Title"] = "Index";
}

<h1>Anime</h1>

<p>
    <a asp-page="Create">Create New</a>
</p>
<form asp-page="./Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by Tytle:
            <input type="text" name="SearchingString" value="@Model.CurrentFilter" list="andl"/>
            <datalist id="andl">
                @if (ViewBag.Anis != null)
                {
                    @foreach (var an in ViewBag.Anis)
                    {
                        <option value=@an.Title></option>
                    }
                }
            </datalist>
            <input type="submit" value="Search" class="btn btn-primary" /> |
            <a asp-page="./Index">Back to full List</a>
        </p>
    </div>
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.TitleSort" asp-route-currentFilter="@Model.CurrentFilter">
                    @Html.DisplayNameFor(model => model.Animes[0].Title)
                </a>
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.TypeSort" asp-route-currentFilter="@Model.CurrentFilter">
                    @Html.DisplayNameFor(model => model.Animes[0].Type)
                </a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Animes[0].Eps)
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.RatingSort" asp-route-currentFilter="@Model.CurrentFilter">
                    @Html.DisplayNameFor(model => model.Animes[0].Rating)
                </a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Animes[0].Country)
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.GroupSort" asp-route-currentFilter="@Model.CurrentFilter">
                    @Html.DisplayNameFor(model => model.Animes[0].Group)
                </a>
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.AirSort" asp-route-currentFilter="@Model.CurrentFilter">
                    @Html.DisplayNameFor(model => model.Animes[0].Aired)
                </a>
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.EndSort" asp-route-currentFilter="@Model.CurrentFilter">
                    @Html.DisplayNameFor(model => model.Animes[0].Ended)
                </a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Animes)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Type)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Eps)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Rating)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Country)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Group)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Aired)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Ended)
                </td>
                <td>
                    <a asp-page="./Edit" asp-route-id="@item.ID">Edit</a> |
                    <a asp-page="./Details" asp-route-id="@item.ID">Details</a> |
                    <a asp-page="./Delete" asp-route-id="@item.ID">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
@{
    var prevDisabled = !Model.Animes.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.Animes.HasNextPage ? "disabled" : "";
}

<a asp-page="./Index"
   asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.Animes.PageIndex - 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
   class="btn btn-primary @prevDisabled">
    Previous
</a>
<a asp-page="./Index"
   asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.Animes.PageIndex + 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
   class="btn btn-primary @nextDisabled">
    Next
</a>
